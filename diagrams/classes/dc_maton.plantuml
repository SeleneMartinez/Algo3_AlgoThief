@startuml
class Maton
{
 + atacar(policia:Policia): IRespuestaDelEvento
}

interface Arma
{
    + herir(policia:Policia): IRespuestaDelEvento
}

class Cuchillo
{
    + demoraPorSegundoAtaque: int
    - demoraPorAtaque: int
    + herir(policia:Policia): Amenaza
}
class Pistola
{
    + demoraPorAtaque: int
    + herir(policia:Policia): Amenaza
}

class Ladron
{
    +nombre:String
    +sexo:String
    +hobby:String
    +pelo:String
    +auto:String
    +caracteristica:String
    +pistasLadron:List<Pista>
    +rutaDeEscape:IRutaDeEscape
    + entregarse():IRespuestaDelEvento
    + escapar():IRespuestaDelEvento
    +obtenerRutaEscape():IRutaDeEscape
    +agregarRutaEscape(IRutaDeEscape ruta, HashMap<String, List<Pista>> pistasPorCiudad)
    +getSexo(): String
    +getPelo(): String
    +getCaracteristica(): String
    +getHobby(): String
    +getVehiculo(): String
    +getNombre(): String
}
interface IOrdenDeCaptura
{
    + capturar(ladron:Ladron):IRespuestaDelEvento
}
class OrdenDeCaptura
{
    + capturar(ladron:Ladron):IRespuestaDelEvento
}
class OrdenDeCapturaSinEmitir
{
    + capturar(ladron:Ladron):LadronEscapo
}
IOrdenDeCaptura <|.. OrdenDeCaptura
IOrdenDeCaptura <|.. OrdenDeCapturaSinEmitir
Maton --> Arma
Arma <|.. Cuchillo
Arma <|.. Pistola
IOrdenDeCaptura --> Ladron
@enduml